% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomWalk.R
\name{RWR}
\alias{RWR}
\title{Perform Random Walk with Restart}
\usage{
RWR(
  tmat,
  seeds = NULL,
  seed_weights = NULL,
  restart = 0.5,
  network_hierarchy,
  node_specific_restart = FALSE,
  node_connectivity_scores,
  max_iters = 100
)
}
\arguments{
\item{tmat}{transition matrix inheriting class "dgCMatrix" from the "Matrix" package.}

\item{seeds}{matrix, data.frame, numeric vector, or NULL (default). If NULL, uniform seed values are given to all nodes.}

\item{seed_weights}{A list of named numeric vectors, or NULL (default). List elements should correspond to sibling sets of categories in network hierarchy. Values in each set must sum to one. NULL gives uniform values within each sibling set.}

\item{restart}{Restart probability. Larger values give more weight to seed values in RWR.}

\item{network_hierarchy}{an object of class 'hierarchy' as a result from \code{create_network_hierarchy()}.}

\item{node_specific_restart}{Logical. Whether to use node-specific restart probabilities based around \strong{restart} proportional to \strong{node_connectivity_scores}.}

\item{node_connectivity_scores}{numeric vector from a call to \code{node_connectivity_score(..., inverse=TRUE)}}

\item{max_iters}{Maximum number of iterations for RWR.}
}
\value{
matrix
}
\description{
Perform Random Walk with Restart (RWR) with a transition matrix, seed set(s), restart parameter, and optional seed weights.
}
\details{
The seed values give the probability of the random walker to start at a node and represents the prior importance of each node. This can be a single set of seed values, or \emph{k} sets of seed values in a \emph{N x k} matrix (\emph{N}=nrow(tmat)), in which case RWR scores will be obtained for all seed sets and will return a \emph{N x k} matrix.

Seed weights give the relative importance between seed sets from different layers in a multilayer network. Seed weights can be given for each set of siblings in the network hierarchy (i.e., categories sharing the same parent). For upper-level categories of the hierarchy, the seeds weights are applied to the layers of their downstream leaf categories. This allows fine control over the relative importance of seed values coming from different categories at all levels of the hierarchy.

\code{RWR()} can implement a node-specific restart parameter based on the user-defined \strong{restart} parameter. For each node, \strong{restart} is increased or decreased as an inverse function of that nodes coreness. Therefore, if a node is located in a dense region of the network (high coreness), then its \strong{restart} value will decrease to enable the random walker to better explore the neighborhood around this node.

\code{RWR()} uses the power iteration method to calculate steady-state probability distributions.
}
\examples{
# Attach igraph package
library(igraph)

# Unique node names in 'simple_network'
uniq_names <- unique(c(simple_network[,1], simple_network[,2]))

# Generate random data simulating Fold Changes
fold_changes <- rexp(length(uniq_names))
names(fold_changes) <- uniq_names

# Create integrated network
g <- create_integrated_network(network_layers = simple_network, 
                               data = fold_changes, 
                               FUN = function(x) abs(log(x)))

# Create transition matrix
tmat <- transition_matrix(network = g$network,
                          network_hierarchy = g$hierarchy,
                          normalize = "modified_degree",
                          k = 0.5)
                          
# Run RWR
seed_vals <- V(g$network)$seeds
names(seed_vals) <- V(g$network)$name
r <- RWR(tmat = tmat, 
         seeds = seed_vals, 
         restart = 0.3, 
         network_hierarchy = g$hierarchy, 
         node_specific_restart = FALSE)

}
\seealso{
\code{\link[=node_connectivity_score]{node_connectivity_score()}}, \code{\link[=RWR_pipeline]{RWR_pipeline()}}, \code{\link[=transition_matrix]{transition_matrix()}}, \code{\link[=module_identification]{module_identification()}}
}
