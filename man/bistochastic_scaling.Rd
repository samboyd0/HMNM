% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomWalk.R
\name{bistochastic_scaling}
\alias{bistochastic_scaling}
\title{Bistochastic Scaling}
\usage{
bistochastic_scaling(tmat, gamma = 1)
}
\arguments{
\item{tmat}{transition matrix}

\item{gamma}{factor controlling to what extent the transition matrix will be adjusted to mitigate degree influence on diffusion processes. Between 0 (no adjustment) and 1 (maximum adjustment).}
}
\value{
A modified transition matrix that is approximately bistochastic
}
\description{
Directly modify the transition matrix to attenuate the influence of degree on diffusion scores (as evidenced by an increased entropy of stationary distribution associated with the modified transition matrix).
This is done by scaling the transition matrix to be approximately bistochastic (all row & column sums equal 1).
}
\details{
\code{bistochastic_scaling()} uses the Iterative Proportional Fitting (IPF) algorithm to scale the input matrix to have target row and column sums. The taret column sums are set to 1, while the target row sums are set to \code{rowsum - gamma * (rowsum - 1)}, where \code{rowsum} are the original row sums of \strong{tmat} and \code{gamma} is the parameter controlling the extent of adjustment.
}
\examples{
# Attach igraph package
library(igraph)

# Create integrated network
g <- create_integrated_network(network_layers = simple_network)

# Create transition matrix
tmat <- transition_matrix(network = g$network,
                          network_hierarchy = g$hierarchy,
                          normalize = "penalized_degree",
                          k = 0.5)
                          
tmat2 <- bistochastic_scaling(tmat = tmat, gamma = 1)
mean(abs(tmat2[tmat2 != 0] - tmat[tmat != 0]))

tmat2 <- bistochastic_scaling(tmat = tmat, gamma = 0.1)
mean(abs(tmat2[tmat2 != 0] - tmat[tmat != 0]))

}
